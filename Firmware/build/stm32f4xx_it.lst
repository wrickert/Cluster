ARM GAS  /tmp/ccrucuOC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f4xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.NMI_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	NMI_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	NMI_Handler:
  27              	.LFB135:
  28              		.file 1 "Src/stm32f4xx_it.c"
   1:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f4xx_it.c **** /**
   3:Src/stm32f4xx_it.c ****   ******************************************************************************
   4:Src/stm32f4xx_it.c ****   * @file    stm32f4xx_it.c
   5:Src/stm32f4xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f4xx_it.c ****   ******************************************************************************
   7:Src/stm32f4xx_it.c ****   * @attention
   8:Src/stm32f4xx_it.c ****   *
   9:Src/stm32f4xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f4xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f4xx_it.c ****   *
  12:Src/stm32f4xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f4xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f4xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f4xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f4xx_it.c ****   *
  17:Src/stm32f4xx_it.c ****   ******************************************************************************
  18:Src/stm32f4xx_it.c ****   */
  19:Src/stm32f4xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f4xx_it.c **** 
  21:Src/stm32f4xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f4xx_it.c **** #include "main.h"
  23:Src/stm32f4xx_it.c **** #include "stm32f4xx_it.h"
  24:Src/stm32f4xx_it.c **** #include "cmsis_os.h"
  25:Src/stm32f4xx_it.c **** /* Private includes ----------------------------------------------------------*/
  26:Src/stm32f4xx_it.c **** /* USER CODE BEGIN Includes */
  27:Src/stm32f4xx_it.c **** /* USER CODE END Includes */
  28:Src/stm32f4xx_it.c **** 
  29:Src/stm32f4xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f4xx_it.c **** /* USER CODE BEGIN TD */
ARM GAS  /tmp/ccrucuOC.s 			page 2


  31:Src/stm32f4xx_it.c **** 
  32:Src/stm32f4xx_it.c **** /* USER CODE END TD */
  33:Src/stm32f4xx_it.c **** 
  34:Src/stm32f4xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PD */
  36:Src/stm32f4xx_it.c ****  
  37:Src/stm32f4xx_it.c **** /* USER CODE END PD */
  38:Src/stm32f4xx_it.c **** 
  39:Src/stm32f4xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PM */
  41:Src/stm32f4xx_it.c **** 
  42:Src/stm32f4xx_it.c **** /* USER CODE END PM */
  43:Src/stm32f4xx_it.c **** 
  44:Src/stm32f4xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f4xx_it.c **** 
  47:Src/stm32f4xx_it.c **** /* USER CODE END PV */
  48:Src/stm32f4xx_it.c **** 
  49:Src/stm32f4xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Src/stm32f4xx_it.c **** /* USER CODE BEGIN PFP */
  51:Src/stm32f4xx_it.c **** 
  52:Src/stm32f4xx_it.c **** /* USER CODE END PFP */
  53:Src/stm32f4xx_it.c **** 
  54:Src/stm32f4xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Src/stm32f4xx_it.c **** /* USER CODE BEGIN 0 */
  56:Src/stm32f4xx_it.c **** 
  57:Src/stm32f4xx_it.c **** /* USER CODE END 0 */
  58:Src/stm32f4xx_it.c **** 
  59:Src/stm32f4xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Src/stm32f4xx_it.c **** extern DMA_HandleTypeDef hdma_tim3_ch4_up;
  61:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim3;
  62:Src/stm32f4xx_it.c **** extern TIM_HandleTypeDef htim1;
  63:Src/stm32f4xx_it.c **** 
  64:Src/stm32f4xx_it.c **** /* USER CODE BEGIN EV */
  65:Src/stm32f4xx_it.c **** 
  66:Src/stm32f4xx_it.c **** /* USER CODE END EV */
  67:Src/stm32f4xx_it.c **** 
  68:Src/stm32f4xx_it.c **** /******************************************************************************/
  69:Src/stm32f4xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  70:Src/stm32f4xx_it.c **** /******************************************************************************/
  71:Src/stm32f4xx_it.c **** /**
  72:Src/stm32f4xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Src/stm32f4xx_it.c ****   */
  74:Src/stm32f4xx_it.c **** void NMI_Handler(void)
  75:Src/stm32f4xx_it.c **** {
  29              		.loc 1 75 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  76:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Src/stm32f4xx_it.c **** 
  78:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Src/stm32f4xx_it.c **** 
  81:Src/stm32f4xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Src/stm32f4xx_it.c **** }
ARM GAS  /tmp/ccrucuOC.s 			page 3


  34              		.loc 1 82 1 view .LVU1
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE135:
  39              		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	1
  41              		.global	HardFault_Handler
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  45              		.fpu fpv4-sp-d16
  47              	HardFault_Handler:
  48              	.LFB136:
  83:Src/stm32f4xx_it.c **** 
  84:Src/stm32f4xx_it.c **** /**
  85:Src/stm32f4xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Src/stm32f4xx_it.c ****   */
  87:Src/stm32f4xx_it.c **** void HardFault_Handler(void)
  88:Src/stm32f4xx_it.c **** {
  49              		.loc 1 88 1 view -0
  50              		.cfi_startproc
  51              		@ Volatile: function does not return.
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.L3:
  89:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Src/stm32f4xx_it.c **** 
  91:Src/stm32f4xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Src/stm32f4xx_it.c ****   while (1)
  56              		.loc 1 92 3 discriminator 1 view .LVU3
  93:Src/stm32f4xx_it.c ****   {
  94:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  95:Src/stm32f4xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  96:Src/stm32f4xx_it.c ****   }
  57              		.loc 1 96 3 discriminator 1 view .LVU4
  58 0000 FEE7     		b	.L3
  59              		.cfi_endproc
  60              	.LFE136:
  62              		.section	.text.MemManage_Handler,"ax",%progbits
  63              		.align	1
  64              		.global	MemManage_Handler
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	MemManage_Handler:
  71              	.LFB137:
  97:Src/stm32f4xx_it.c **** }
  98:Src/stm32f4xx_it.c **** 
  99:Src/stm32f4xx_it.c **** /**
 100:Src/stm32f4xx_it.c ****   * @brief This function handles Memory management fault.
 101:Src/stm32f4xx_it.c ****   */
 102:Src/stm32f4xx_it.c **** void MemManage_Handler(void)
 103:Src/stm32f4xx_it.c **** {
  72              		.loc 1 103 1 view -0
  73              		.cfi_startproc
ARM GAS  /tmp/ccrucuOC.s 			page 4


  74              		@ Volatile: function does not return.
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78              	.L5:
 104:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 105:Src/stm32f4xx_it.c **** 
 106:Src/stm32f4xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 107:Src/stm32f4xx_it.c ****   while (1)
  79              		.loc 1 107 3 discriminator 1 view .LVU6
 108:Src/stm32f4xx_it.c ****   {
 109:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 110:Src/stm32f4xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 111:Src/stm32f4xx_it.c ****   }
  80              		.loc 1 111 3 discriminator 1 view .LVU7
  81 0000 FEE7     		b	.L5
  82              		.cfi_endproc
  83              	.LFE137:
  85              		.section	.text.BusFault_Handler,"ax",%progbits
  86              		.align	1
  87              		.global	BusFault_Handler
  88              		.syntax unified
  89              		.thumb
  90              		.thumb_func
  91              		.fpu fpv4-sp-d16
  93              	BusFault_Handler:
  94              	.LFB138:
 112:Src/stm32f4xx_it.c **** }
 113:Src/stm32f4xx_it.c **** 
 114:Src/stm32f4xx_it.c **** /**
 115:Src/stm32f4xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 116:Src/stm32f4xx_it.c ****   */
 117:Src/stm32f4xx_it.c **** void BusFault_Handler(void)
 118:Src/stm32f4xx_it.c **** {
  95              		.loc 1 118 1 view -0
  96              		.cfi_startproc
  97              		@ Volatile: function does not return.
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		@ link register save eliminated.
 101              	.L7:
 119:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 120:Src/stm32f4xx_it.c **** 
 121:Src/stm32f4xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 122:Src/stm32f4xx_it.c ****   while (1)
 102              		.loc 1 122 3 discriminator 1 view .LVU9
 123:Src/stm32f4xx_it.c ****   {
 124:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 125:Src/stm32f4xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 126:Src/stm32f4xx_it.c ****   }
 103              		.loc 1 126 3 discriminator 1 view .LVU10
 104 0000 FEE7     		b	.L7
 105              		.cfi_endproc
 106              	.LFE138:
 108              		.section	.text.UsageFault_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	UsageFault_Handler
ARM GAS  /tmp/ccrucuOC.s 			page 5


 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv4-sp-d16
 116              	UsageFault_Handler:
 117              	.LFB139:
 127:Src/stm32f4xx_it.c **** }
 128:Src/stm32f4xx_it.c **** 
 129:Src/stm32f4xx_it.c **** /**
 130:Src/stm32f4xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 131:Src/stm32f4xx_it.c ****   */
 132:Src/stm32f4xx_it.c **** void UsageFault_Handler(void)
 133:Src/stm32f4xx_it.c **** {
 118              		.loc 1 133 1 view -0
 119              		.cfi_startproc
 120              		@ Volatile: function does not return.
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123              		@ link register save eliminated.
 124              	.L9:
 134:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 135:Src/stm32f4xx_it.c **** 
 136:Src/stm32f4xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 137:Src/stm32f4xx_it.c ****   while (1)
 125              		.loc 1 137 3 discriminator 1 view .LVU12
 138:Src/stm32f4xx_it.c ****   {
 139:Src/stm32f4xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 140:Src/stm32f4xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 141:Src/stm32f4xx_it.c ****   }
 126              		.loc 1 141 3 discriminator 1 view .LVU13
 127 0000 FEE7     		b	.L9
 128              		.cfi_endproc
 129              	.LFE139:
 131              		.section	.text.DebugMon_Handler,"ax",%progbits
 132              		.align	1
 133              		.global	DebugMon_Handler
 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu fpv4-sp-d16
 139              	DebugMon_Handler:
 140              	.LFB140:
 142:Src/stm32f4xx_it.c **** }
 143:Src/stm32f4xx_it.c **** 
 144:Src/stm32f4xx_it.c **** /**
 145:Src/stm32f4xx_it.c ****   * @brief This function handles Debug monitor.
 146:Src/stm32f4xx_it.c ****   */
 147:Src/stm32f4xx_it.c **** void DebugMon_Handler(void)
 148:Src/stm32f4xx_it.c **** {
 141              		.loc 1 148 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 149:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 150:Src/stm32f4xx_it.c **** 
 151:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
ARM GAS  /tmp/ccrucuOC.s 			page 6


 152:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 153:Src/stm32f4xx_it.c **** 
 154:Src/stm32f4xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 155:Src/stm32f4xx_it.c **** }
 146              		.loc 1 155 1 view .LVU15
 147 0000 7047     		bx	lr
 148              		.cfi_endproc
 149              	.LFE140:
 151              		.section	.text.DMA1_Stream2_IRQHandler,"ax",%progbits
 152              		.align	1
 153              		.global	DMA1_Stream2_IRQHandler
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu fpv4-sp-d16
 159              	DMA1_Stream2_IRQHandler:
 160              	.LFB141:
 156:Src/stm32f4xx_it.c **** 
 157:Src/stm32f4xx_it.c **** /******************************************************************************/
 158:Src/stm32f4xx_it.c **** /* STM32F4xx Peripheral Interrupt Handlers                                    */
 159:Src/stm32f4xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 160:Src/stm32f4xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 161:Src/stm32f4xx_it.c **** /* please refer to the startup file (startup_stm32f4xx.s).                    */
 162:Src/stm32f4xx_it.c **** /******************************************************************************/
 163:Src/stm32f4xx_it.c **** 
 164:Src/stm32f4xx_it.c **** /**
 165:Src/stm32f4xx_it.c ****   * @brief This function handles DMA1 stream2 global interrupt.
 166:Src/stm32f4xx_it.c ****   */
 167:Src/stm32f4xx_it.c **** void DMA1_Stream2_IRQHandler(void)
 168:Src/stm32f4xx_it.c **** {
 161              		.loc 1 168 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 08B5     		push	{r3, lr}
 166              	.LCFI0:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 3, -8
 169              		.cfi_offset 14, -4
 169:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */
 170:Src/stm32f4xx_it.c **** 
 171:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 0 */
 172:Src/stm32f4xx_it.c ****   HAL_DMA_IRQHandler(&hdma_tim3_ch4_up);
 170              		.loc 1 172 3 view .LVU17
 171 0002 0248     		ldr	r0, .L13
 172 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 173              	.LVL0:
 173:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */
 174:Src/stm32f4xx_it.c **** 
 175:Src/stm32f4xx_it.c ****   /* USER CODE END DMA1_Stream2_IRQn 1 */
 176:Src/stm32f4xx_it.c **** }
 174              		.loc 1 176 1 is_stmt 0 view .LVU18
 175 0008 08BD     		pop	{r3, pc}
 176              	.L14:
 177 000a 00BF     		.align	2
 178              	.L13:
 179 000c 00000000 		.word	hdma_tim3_ch4_up
ARM GAS  /tmp/ccrucuOC.s 			page 7


 180              		.cfi_endproc
 181              	.LFE141:
 183              		.section	.text.TIM1_UP_TIM10_IRQHandler,"ax",%progbits
 184              		.align	1
 185              		.global	TIM1_UP_TIM10_IRQHandler
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	TIM1_UP_TIM10_IRQHandler:
 192              	.LFB142:
 177:Src/stm32f4xx_it.c **** 
 178:Src/stm32f4xx_it.c **** /**
 179:Src/stm32f4xx_it.c ****   * @brief This function handles TIM1 update interrupt and TIM10 global interrupt.
 180:Src/stm32f4xx_it.c ****   */
 181:Src/stm32f4xx_it.c **** void TIM1_UP_TIM10_IRQHandler(void)
 182:Src/stm32f4xx_it.c **** {
 193              		.loc 1 182 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197 0000 08B5     		push	{r3, lr}
 198              	.LCFI1:
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 3, -8
 201              		.cfi_offset 14, -4
 183:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 0 */
 184:Src/stm32f4xx_it.c **** 
 185:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 0 */
 186:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 202              		.loc 1 186 3 view .LVU20
 203 0002 0248     		ldr	r0, .L17
 204 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 205              	.LVL1:
 187:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM10_IRQn 1 */
 188:Src/stm32f4xx_it.c **** 
 189:Src/stm32f4xx_it.c ****   /* USER CODE END TIM1_UP_TIM10_IRQn 1 */
 190:Src/stm32f4xx_it.c **** }
 206              		.loc 1 190 1 is_stmt 0 view .LVU21
 207 0008 08BD     		pop	{r3, pc}
 208              	.L18:
 209 000a 00BF     		.align	2
 210              	.L17:
 211 000c 00000000 		.word	htim1
 212              		.cfi_endproc
 213              	.LFE142:
 215              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 216              		.align	1
 217              		.global	TIM3_IRQHandler
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 221              		.fpu fpv4-sp-d16
 223              	TIM3_IRQHandler:
 224              	.LFB143:
 191:Src/stm32f4xx_it.c **** 
 192:Src/stm32f4xx_it.c **** /**
ARM GAS  /tmp/ccrucuOC.s 			page 8


 193:Src/stm32f4xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 194:Src/stm32f4xx_it.c ****   */
 195:Src/stm32f4xx_it.c **** void TIM3_IRQHandler(void)
 196:Src/stm32f4xx_it.c **** {
 225              		.loc 1 196 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI2:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 197:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 198:Src/stm32f4xx_it.c **** 
 199:Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 200:Src/stm32f4xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 234              		.loc 1 200 3 view .LVU23
 235 0002 0248     		ldr	r0, .L21
 236 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 237              	.LVL2:
 201:Src/stm32f4xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 202:Src/stm32f4xx_it.c **** 
 203:Src/stm32f4xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 204:Src/stm32f4xx_it.c **** }
 238              		.loc 1 204 1 is_stmt 0 view .LVU24
 239 0008 08BD     		pop	{r3, pc}
 240              	.L22:
 241 000a 00BF     		.align	2
 242              	.L21:
 243 000c 00000000 		.word	htim3
 244              		.cfi_endproc
 245              	.LFE143:
 247              		.text
 248              	.Letext0:
 249              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 250              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 251              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 252              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 253              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 254              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 255              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 256              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
ARM GAS  /tmp/ccrucuOC.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_it.c
     /tmp/ccrucuOC.s:18     .text.NMI_Handler:0000000000000000 $t
     /tmp/ccrucuOC.s:26     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/ccrucuOC.s:40     .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccrucuOC.s:47     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccrucuOC.s:63     .text.MemManage_Handler:0000000000000000 $t
     /tmp/ccrucuOC.s:70     .text.MemManage_Handler:0000000000000000 MemManage_Handler
     /tmp/ccrucuOC.s:86     .text.BusFault_Handler:0000000000000000 $t
     /tmp/ccrucuOC.s:93     .text.BusFault_Handler:0000000000000000 BusFault_Handler
     /tmp/ccrucuOC.s:109    .text.UsageFault_Handler:0000000000000000 $t
     /tmp/ccrucuOC.s:116    .text.UsageFault_Handler:0000000000000000 UsageFault_Handler
     /tmp/ccrucuOC.s:132    .text.DebugMon_Handler:0000000000000000 $t
     /tmp/ccrucuOC.s:139    .text.DebugMon_Handler:0000000000000000 DebugMon_Handler
     /tmp/ccrucuOC.s:152    .text.DMA1_Stream2_IRQHandler:0000000000000000 $t
     /tmp/ccrucuOC.s:159    .text.DMA1_Stream2_IRQHandler:0000000000000000 DMA1_Stream2_IRQHandler
     /tmp/ccrucuOC.s:179    .text.DMA1_Stream2_IRQHandler:000000000000000c $d
     /tmp/ccrucuOC.s:184    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 $t
     /tmp/ccrucuOC.s:191    .text.TIM1_UP_TIM10_IRQHandler:0000000000000000 TIM1_UP_TIM10_IRQHandler
     /tmp/ccrucuOC.s:211    .text.TIM1_UP_TIM10_IRQHandler:000000000000000c $d
     /tmp/ccrucuOC.s:216    .text.TIM3_IRQHandler:0000000000000000 $t
     /tmp/ccrucuOC.s:223    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
     /tmp/ccrucuOC.s:243    .text.TIM3_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_DMA_IRQHandler
hdma_tim3_ch4_up
HAL_TIM_IRQHandler
htim1
htim3
